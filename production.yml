services:
  mariadb:
    image: docker.io/bitnami/mariadb:11.4
    container_name: mariadb
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - MARIADB_USER=bn_moodle
      - MARIADB_DATABASE=bitnami_moodle
      - MARIADB_CHARACTER_SET=utf8mb4
      - MARIADB_COLLATE=utf8mb4_unicode_ci
    volumes:
      - 'mariadb_data:/bitnami/mariadb'
    networks:
      - internal-network  # Attach to the custom network

  moodle:
    image: docker.io/bitnami/moodle:4.5
    container_name: moodle
    ports:
      - '8081:8080'  # Expose port 8081 to host
    environment:
      - MOODLE_DATABASE_HOST=mariadb
      - MOODLE_DATABASE_PORT_NUMBER=3306
      - MOODLE_DATABASE_USER=bn_moodle
      - MOODLE_DATABASE_NAME=bitnami_moodle
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - 'moodle_data:/bitnami/moodle'
      - 'moodledata_data:/bitnami/moodledata'
    depends_on:
      - mariadb
    networks:
      - internal-network  # Attach to the custom network
  
  core-app:
    build:
      context: ./app/view  # Directory where the Dockerfile is located
    container_name: core-app
    depends_on:
      - mongodb
      - redis-cache
    networks:
      - internal-network  # Attach to the custom network

  mongodb:
    image: mongo:latest
    hostname: mongodb
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: app
      MONGO_INITDB_ROOT_PASSWORD: secret
      ME_CONFIG_MONGODB_URL: mongodb://app:secret@mongo_db:27017
      ME_CONFIG_BASICAUTH: false
    networks:
      - internal-network  # Attach to the custom network

  mongo-setup:
    image: mongo:latest
    hostname: mongo-setup
    container_name: mongo-setup
    links:
      - mongodb
    volumes:
      - ./mongodb:/mongodb
    command:
      - /mongodb/mongo_setup.sh
    networks:
      - internal-network  # Attach to the custom network

  redis-cache:
    image: redis:latest
    hostname: redis-cache
    container_name: redis-cache
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    command:
      - redis-server
    networks:
      - internal-network  # Attach to the custom network

  nfs-server:
    image: openebs/nfs-server-alpine
    container_name: nfs-server
    privileged: true  # Enable privileged mode
    ports:
      - "2049:2049"
    environment:
      - SHARED_DIRECTORY=/nfsshare
      - PERMITTED="*"
      - READ_ONLY="rw"
      - SYNC="sync"
      - FILEPERMISSIONS_UID=1000 # User ID for shared directory permissions
      - FILEPERMISSIONS_GID=1000 # Group ID for shared directory permissions
      - FILEPERMISSIONS_MODE=0755
    volumes:
      - ./nfs/nfsdisk:/nfsshare

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "8080:80"  # Expose port 8080 to localhost
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro  # Custom Nginx config
      - ./static/data:/usr/share/nginx/html  # Mount local ./static directory to Nginx's HTML root
      - ./app/view:/usr/share/nginx/html  # Mount local ./static directory to Nginx's HTML root
    depends_on:
      - moodle
      - mariadb
      - core-app
      - nfs-server
    networks:
      - internal-network  # Attach to the custom network

volumes:
  mariadb_data:
    driver: local
  moodle_data:
    driver: local
  moodledata_data:
    driver: local

networks:
  internal-network:
    driver: bridge
